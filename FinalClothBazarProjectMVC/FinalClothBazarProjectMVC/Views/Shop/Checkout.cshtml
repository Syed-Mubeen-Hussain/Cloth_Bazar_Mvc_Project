@model CheckoutViewModel

@{
    ViewBag.Title = "Checkout";
}

@if (Model != null && Model.Products != null && Model.Products.Count > 0)
{
    var i = 1;
    <section class="flat-row main-shop shop-slidebar">
        <div class="container">
            <div class="row">
                <div class="col-md-4 order-md-2 mb-4">
                    <h4 class="d-flex justify-content-between align-items-center mb-3">
                        <span class="text-muted">Your cart</span>
                    </h4>
                    <ul class="list-group mb-3">
                        @foreach (var product in Model.Products)
                        {
                            int productQuantity = Model.Product_ids.Where(x => x == product.pro_id).Count();
                            Model.quantity = productQuantity;
                            <li class="list-group-item d-flex justify-content-between lh-condensed" data-id="@product.pro_id">
                                <div>
                                    <h6 class="my-0">@i - @product.pro_name - Qty: @productQuantity</h6>
                                    <small class="text-muted">@(product.pro_description.Length > 100 ? product.pro_description.Substring(0, 99) : product.pro_description)</small>
                                </div>
                                <span class="text-muted">Unit Price: $ @product.pro_price - Total Price: @(productQuantity * product.pro_price)</span>
                            </li>

                            i++;
                        }

                        <li class="list-group-item d-flex justify-content-between">
                            <span>Total (USD)</span>
                            <strong>
                                $ @Model.Products.Sum(x => x.pro_price * Model.Product_ids.Where(productID => productID == x.pro_id).Count())
                            </strong>
                        </li>
                    </ul>
                </div>
                <div class="col-md-8 order-md-1">
                    <h4 class="mb-3">Billing address</h4>
                    <form class="needs-validation" novalidate="">
                        <div class="row">
                            <div class="col-md-12 mb-3">
                                <label for="firstName">Name</label>
                                <input type="text" class="form-control" id="Name" placeholder="" value="@Model.user.u_username" required="">
                            </div>
                        </div>

                        <div class="mb-3">
                            <label for="email">Email <span class="text-muted">(Optional)</span></label>
                            <input type="email" class="form-control" id="Email" placeholder="you@example.com" value="@Model.user.u_email">
                        </div>

                        <div class="mb-3">
                            <label for="address">Address</label>
                            <input type="text" class="form-control" id="address" placeholder="1234 Main St" required="" value="">
                        </div>

                        <hr class="mb-4">
                        <button  type="button" id="placeOrderBtn" class="btn btn-primary btn-lg btn-block">Place Order!</button>
                    </form>
                </div>
            </div>
        </div><!-- /.container -->
    </section>

}
else
{
    <div>No Products in Cart.</div>
}

    <script>
        $("#placeOrderBtn").click(function () {
              $.ajax({
                  url: '@Url.Action("PlaceOrder", "Shop")',
                  data: {
                      productIDs : '@string.Join("-",Model.Product_ids)'
                  }
        })
            .done(function (response) {
                $.cookie('CartProducts', '', { path: '/' });
                UpdateCartProductCount();
                swal("Done", "Your Order has been placed.", "success").then((value) => {
        			window.location = '@Url.Action("Index", "Shop")';
        		});
            })
            .fail(function (XMLHttpRequest, textStatus, errorThrown) {
                alert("FAIL");
            });
        });
    </script>