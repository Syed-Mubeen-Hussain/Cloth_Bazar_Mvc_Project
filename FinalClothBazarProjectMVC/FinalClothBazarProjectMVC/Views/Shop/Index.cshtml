@using FinalClothBazarProjectMVC.code

@model ShopViewModel
@{
    ViewBag.Title = "Index";
}


<!-- Page title -->
<div class="page-title parallax parallax1">
    <div class="container">
        <div class="row">
            <div class="col-md-12">
                <div class="page-title-heading">
                    <h1 class="title">Shop</h1>
                </div><!-- /.page-title-heading -->
            </div><!-- /.col-md-12 -->
        </div><!-- /.row -->
    </div><!-- /.container -->
</div><!-- /.page-title -->

<section class="flat-row main-shop shop-slidebar">
    <div class="container">
        <div class="row">
            <div class="col-md-3">
                <div class="sidebar slidebar-shop">
                    <div class="widget widget-search">
                        <form role="search" method="get" class="search-form" action="#">
                            <label>
                                <input type="text" class="search-field" placeholder="Search …" value="@Model.SearchTerm" id="searchTxt">
                            </label>
                            <button id="searchBtn" type="button">Submit</button>
                        </form>
                    </div><!-- /.widget-search -->
                    <div class="widget widget-sort-by">
                        <h5 class="widget-title">
                            Sort By
                        </h5>
                        <ul>
                            <li><a data-href="@Url.Action("FilterProducts","Shop",new {categoryID = Model.categoryID, sortBy = (int)SortByEnums.Default })" class="@(Model.sortBy == (int)SortByEnums.Default ? "active" : string.Empty) dataLink">Default</a></li>
                            <li><a data-href="@Url.Action("FilterProducts","Shop",new {categoryID = Model.categoryID, sortBy = (int)SortByEnums.Popularity})" class="@(Model.sortBy == (int)SortByEnums.Popularity ? "active" : string.Empty) dataLink">Popularity</a></li>
                            <li><a data-href="@Url.Action("FilterProducts","Shop",new {categoryID = Model.categoryID, sortBy = (int)SortByEnums.PriceLowToHigh})" class="@(Model.sortBy == (int)SortByEnums.PriceLowToHigh? "active" : string.Empty) dataLink">Price: low to high</a></li>
                            <li><a data-href="@Url.Action("FilterProducts","Shop",new {categoryID = Model.categoryID, sortBy = (int)SortByEnums.PriceHighToLow})" class="@(Model.sortBy == (int)SortByEnums.PriceHighToLow ? "active" : string.Empty) dataLink">Price: high to low</a></li>
                        </ul>
                    </div><!-- /.widget-sort-by -->
                    <div class="widget widget_tag">
                        <h5 class="widget-title">
                            Featured Categories
                        </h5>
                        <div class="tag-list">
                            @foreach (var category in Model.featuredCategories)
                            {
                                <a data-href="@Url.Action("FilterProducts","Shop",new { categoryID = category.cat_id,sortBy = Model.sortBy })" class="@(Model.categoryID == category.cat_id ? "active": string.Empty) dataLink">@category.cat_name</a>
                            }
                        </div>
                    </div><!-- /.widget -->
                    <div class="widget widget-price">
                        <h5 class="widget-title">Filter by price</h5>
                        <div class="price-filter">
                            <div id="slide-range"></div>
                            <p class="amount">
                                Price: <input type="text" value="Rs 0 - Rs @Model.MaximumPrice" id="amount" disabled="">
                            </p>
                        </div>
                    </div>
                    <a class="btn btn-danger" href="@Url.Action("Index","Shop")">Reset</a>
                </div><!-- /.sidebar -->
            </div><!-- /.col-md-3 -->
            <div class="col-md-9">
                <div class="filter-shop clearfix">
                    <p class="showing-product float-right">
                        Showing @((Model.pager.CurrentPage - 1) * Model.pager.PageSize + 1) – @(Model.pager.CurrentPage * Model.pager.PageSize > Model.pager.TotalItems ? Model.pager.TotalItems : Model.pager.CurrentPage * Model.pager.PageSize ) of @(Model.pager.TotalItems) Products
                    </p>
                </div><!-- /.filte-shop -->
           

                <div id="productDiv">
                    @{
                        var filterProductViewModel = new FilterProductViewModel();
                        filterProductViewModel.Products = Model.Products;
                        filterProductViewModel.categoryID = Model.categoryID;
                        filterProductViewModel.sortBy = Model.sortBy;
                        filterProductViewModel.pager = Model.pager;

                        Html.RenderPartial("FilterProducts", filterProductViewModel);
                    }
                </div>


            </div><!-- /.col-md-9 -->
        </div><!-- /.row -->
    </div><!-- /.container -->
</section><!-- /.flat-row -->
<script>
    
    var callTimout;
    var priceSlider = $("#slide-range").slider({
        range : true,
        min : 0,
        max  : '@Model.MaximumPrice',
        values : [0,@Model.MaximumPrice],
        slide: function (event, ui) {
            var minPrice = ui.values[0];
            var maxPrice = ui.values[1];
                       
            $("#amount").val("Rs " + minPrice + "-" + "Rs " + maxPrice);


            clearTimeout(callTimout)
            callTimout = setTimeout(PriceSliderChanger, 500);
        }
    });


    $(".dataLink").click(function () {
        var url = $(this).attr("data-href");
        if (url != "" || url != undefined) {
            GetData(url);
        }
    });

    function GetData(durl) {
          $.ajax({
              url: durl,
              data: {
                  sortBy: $("#SortBy").val(),
                  categoryID: $("#CategoryID").val(),
                  search: $('#searchTxt').val(),
                  minimumPrice: priceSlider.slider("values", 0),
                  maximumPrice: priceSlider.slider("values", 1),
              }
          })
            .done(function (response) {
                $("#productDiv").html(response);

            })
            .fail(function (XMLHttpRequest, textStatus, errorThrown) {
                alert("FAIL");
            });
    }

     function PriceSliderChanger() {
          $.ajax({
            url: '@Url.Action("FilterProducts", "Shop")',
              data: {
                  sortBy: $("#SortBy").val(),
                  categoryID: $("#CategoryID").val(),
                  search: $('#searchTxt').val(),
                  minimumPrice: priceSlider.slider("values", 0),
                  maximumPrice: priceSlider.slider("values", 1)
            }
             })
            .done(function (response) {
                $("#productDiv").html(response);

            })
            .fail(function (XMLHttpRequest, textStatus, errorThrown) {
                alert("FAIL");
            });
    }
    $("#searchBtn").click(function (){
        $.ajax({
            url: '@Url.Action("FilterProducts", "Shop")',
              data: {
                  sortBy: $("#SortBy").val(),
                  categoryID: $("#CategoryID").val(),
                  search: $('#searchTxt').val(),
                  minimumPrice: priceSlider.slider("values", 0),
                  maximumPrice: priceSlider.slider("values", 1)
            }
             })
            .done(function (response) {
                $("#productDiv").html(response);

            })
            .fail(function (XMLHttpRequest, textStatus, errorThrown) {
                alert("FAIL");
            });
    })
</script>